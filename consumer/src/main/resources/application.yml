server:
  port: 9090

eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:10086/eureka
    registry-fetch-interval-seconds: 5 #每隔多长时间会获取并更新数据，默认30秒，
  instance:
    prefer-ip-address: true
    ip-address: 127.0.0.1
    lease-expiration-duration-in-seconds: 5 # 服务续约时间，默认30秒。心跳机制
    lease-renewal-interval-in-seconds: 10 # 服务失效时间
spring:
  application:
    name: consumer

user-server:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
#feign:
#  hystrix:
#    ReadTimeout:3000
#    配置ribbon
#server:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #配置规则 随机
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #配置规则 轮询
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule #配置规则 重试
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule #配置规则 响应时间权重
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.BestAvailableRule #配置规则 最空闲连接策略
#    ConnectTimeout: 500 #请求连接超时时间
#    ReadTimeout: 1000 #请求处理的超时时间
#    OkToRetryOnAllOperations: true #对所有请求都进行重试
#    MaxAutoRetriesNextServer: 2 #切换实例的重试次数
logging:
  level:
    cn.itcast : debug
#    MaxAutoRetries: 1 #对当前实例的重试次数
#feign:
#hystrix:
#  command:
#    default:
#      execution:
#        timeout:
#          enabled: true
#        isolation:
#          thread:
#            timeoutInMilliseconds: 9000
hystrix:
  ReadTimeout:3000
  metrics:
    enabled: true
